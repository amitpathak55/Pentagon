# Generated by Django 3.0.5 on 2020-05-03 06:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import student.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Advisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EducationHistoy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('major', models.CharField(blank=True, max_length=255, null=True)),
                ('university', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(max_length=255)),
                ('end_date', models.CharField(blank=True, max_length=255, null=True)),
                ('gpa', models.CharField(blank=True, max_length=4, null=True)),
                ('education_level', models.CharField(choices=[('B', 'Bachelors'), ('M', 'Masters'), ('P', 'PHD')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hire_date', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('hire_type', models.CharField(max_length=255)),
                ('pay_level', models.CharField(blank=True, max_length=255, null=True)),
                ('funding_source', models.CharField(blank=True, max_length=255, null=True)),
                ('assignment', models.CharField(blank=True, max_length=255, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('tbp_hours', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Milestones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_plan', models.CharField(blank=True, max_length=255, null=True)),
                ('degree_plan_file', models.FileField(blank=True, null=True, upload_to=student.models.upload_student_files)),
                ('major_professor_form', models.CharField(blank=True, max_length=255, null=True)),
                ('major_professor_form_file', models.FileField(blank=True, null=True, upload_to=student.models.upload_student_files)),
                ('committee_appointment_form', models.CharField(blank=True, max_length=255, null=True)),
                ('committee_appointment_form_file', models.FileField(blank=True, null=True, upload_to=student.models.upload_student_files)),
                ('qualifying_exam', models.CharField(blank=True, max_length=255, null=True)),
                ('qualifying_exam_file', models.FileField(blank=True, null=True, upload_to=student.models.upload_student_files)),
                ('topic_proposal', models.CharField(blank=True, max_length=255, null=True)),
                ('topic_proposal_file', models.FileField(blank=True, null=True, upload_to=student.models.upload_student_files)),
                ('thesis', models.CharField(blank=True, max_length=255, null=True)),
                ('thesis_file', models.FileField(blank=True, null=True, upload_to=student.models.upload_student_files)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.CharField(max_length=255, unique=True)),
                ('degree', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='student.Degree')),
            ],
            options={
                'unique_together': {('name', 'degree')},
            },
        ),
        migrations.CreateModel(
            name='QuantitativeReasoning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_on_prior_scale', models.IntegerField()),
                ('score_on_current_scale', models.IntegerField()),
                ('rank', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='VerbalReasoning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score_on_prior_scale', models.IntegerField()),
                ('score_on_current_scale', models.IntegerField()),
                ('rank', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StudentNotes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_date', models.DateField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudentFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('file_link', models.FileField(upload_to=student.models.upload_student_files)),
                ('created_date', models.DateField()),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('starting_semester', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('entry_date', models.CharField(blank=True, max_length=255, null=True)),
                ('degree', models.CharField(blank=True, max_length=250, null=True)),
                ('gpa', models.CharField(blank=True, max_length=5, null=True)),
                ('city', models.CharField(blank=True, max_length=40, null=True)),
                ('state', models.CharField(blank=True, max_length=40, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=40, null=True)),
                ('country', models.CharField(blank=True, max_length=40, null=True)),
                ('citizenship', models.CharField(blank=True, max_length=20, null=True)),
                ('gender', models.CharField(blank=True, choices=[('F', 'Female'), ('M', 'Male'), ('O', 'Other')], max_length=1, null=True)),
                ('immigration', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('elp_score', models.IntegerField(blank=True, null=True)),
                ('greq_score', models.IntegerField(blank=True, null=True)),
                ('grev_score', models.IntegerField(blank=True, null=True)),
                ('grea_score', models.IntegerField(blank=True, null=True)),
                ('greq_score_percent', models.IntegerField(blank=True, null=True)),
                ('grev_score_percent', models.IntegerField(blank=True, null=True)),
                ('grea_score_percent', models.IntegerField(blank=True, null=True)),
                ('gre_total_score', models.IntegerField(blank=True, null=True)),
                ('level', models.CharField(blank=True, max_length=255, null=True)),
                ('decision', models.CharField(blank=True, max_length=255, null=True)),
                ('decision_date', models.CharField(blank=True, max_length=255, null=True)),
                ('decision_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=student.models.student_image_upload)),
                ('education_history', models.ManyToManyField(to='student.EducationHistoy')),
                ('employment_history', models.ManyToManyField(to='student.EmploymentHistory')),
                ('files', models.ManyToManyField(to='student.StudentFile')),
                ('milestones', models.ManyToManyField(to='student.Milestones')),
                ('notes', models.ManyToManyField(to='student.StudentNotes')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Program')),
            ],
        ),
    ]
